// Code generated by ent, DO NOT EDIT.

package versioninfo

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the versioninfo type in the database.
	Label = "version_info"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVersionName holds the string denoting the version_name field in the database.
	FieldVersionName = "version_name"
	// FieldReleaseNote holds the string denoting the release_note field in the database.
	FieldReleaseNote = "release_note"
	// FieldCustomData holds the string denoting the custom_data field in the database.
	FieldCustomData = "custom_data"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the versioninfo in the database.
	Table = "version_infos"
)

// Columns holds all SQL columns for versioninfo fields.
var Columns = []string{
	FieldID,
	FieldVersionName,
	FieldReleaseNote,
	FieldCustomData,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// VersionNameValidator is a validator for the "version_name" field. It is called by the builders before save.
	VersionNameValidator func(string) error
	// DefaultReleaseNote holds the default value on creation for the "release_note" field.
	DefaultReleaseNote string
	// DefaultCustomData holds the default value on creation for the "custom_data" field.
	DefaultCustomData string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the VersionInfo queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByVersionName orders the results by the version_name field.
func ByVersionName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVersionName, opts...).ToFunc()
}

// ByReleaseNote orders the results by the release_note field.
func ByReleaseNote(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReleaseNote, opts...).ToFunc()
}

// ByCustomData orders the results by the custom_data field.
func ByCustomData(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCustomData, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
